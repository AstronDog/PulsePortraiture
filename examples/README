===================
===Basic Examples==
===================


--To get more help:
          ppalign.py -h
          ppinterp.py -h
          ppgauss.py -h
          pptoas.py -h


--For a more involved example, run/examine example.py.


--Simplest command-line use with minimum arguments:

    >Average some homogeneous data together to make an average portrait:
          ppalign.py -M metafile_with_archive_names

    >Make a smooth model of the data, which can be reconstructed at any
        frequency within the range of the data:
          ppinterp.py -d average_psrfits_file.fits

    >Make a gaussian model (based on averaged data e.g. having used psradd):
          ppgauss.py -d average_psrfits_file.fits

    >Measure TOAs & DMs from an archive using a ppinterp model:
          pptoas.py -d psrfits_archive.fits -m model_from_ppinterp.spl

    >Measure TOAs & DMs from an archive using a ppgauss model:
          pptoas.py -d psrfits_archive.fits -m model_from_ppgauss.gmodel

    >Measure TOAs & DMs from an archive using another archive:
          pptoas.py -d psrfits_archive.fits -m similar_psrfits_archive.fits


--More involved command-line use with some additional options (combinable):

    >Make a smooth, parameterized model of the data, but first normalize the
        data per-channel and output a PSRCHIVE archive showing the
        reconstruction:
          ppinterp.py -d psrfits_archive.fits -N prof -a reconstruction.fits

    >Make a gaussian model based on averaged data archives from different
        receivers:
          ppgauss.py -M metafile_with_archive_names --nu_ref 1500.0 --bw 200.0

    >Make a gaussian model, but first normalize the data per-channel and fix
        the first fitted gaussian component's location (fiducial component):
          ppgauss.py -d average_psrfits_file.fits --fgauss --norm

    >Make a gaussian model that includes a fit for a constant scattering
        timescale (will take long[er]) and iterate three additional times:
          ppgauss.py -d average_psrfits_file.fits --fitscat --niter 3

    >Make a gaussian model specifying some of the output and show more output:
          ppgauss.py -d average_psrfits_file.fits -o ppgauss_model.gmodel \
            -m 2_component_820_MHz_model --verbose

    >Measure TOAs & DMs from a metafile of archives, but output only a single
        (average) DM for each archive, and suppress all other output:
          pptoas.py -d metafile_with_archive_names \
            -m model_from_ppinterp_or_ppgauss --one_DM --quiet

    >Measure only TOAs in an archive and specify an output file:
        (NB: DMs will still be 'barycentered' unless --no_bary is also used!)
          pptoas.py -d psrfits_archive.fits -m model_from_ppinterp_or_ppgauss \
            -o my_tim_file.tim --fix_DM --no_bary

    >Add additonal flags (in pairs) to the output TOA lines:
          pptoas.py -d psrfits_archive.fits -m model_from_ppinterp_or_ppgauss \
            --flags pta,pta_name,release,release_number
